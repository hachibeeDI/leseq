"use strict";(self.webpackChunkleseq_docs=self.webpackChunkleseq_docs||[]).push([[68],{876:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,y=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(y,l(l({ref:t},p),{},{components:n})):r.createElement(y,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6561:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=n(7896),a=n(1461),o=(n(2784),n(876)),l=["components"],s={id:"seq",title:"Seq<T>/AsyncSeq<T> Object",sidebar_label:"Seq<T>/AsyncSeq<T> Object",sidebar_position:.5,custom_edit_url:null,hide_title:!0},i=void 0,c={unversionedId:"seq",id:"seq",title:"Seq<T>/AsyncSeq<T> Object",description:"Seq Object",source:"@site/docs/seq.md",sourceDirName:".",slug:"/seq",permalink:"/leseq/seq",editUrl:null,tags:[],version:"current",sidebarPosition:.5,frontMatter:{id:"seq",title:"Seq<T>/AsyncSeq<T> Object",sidebar_label:"Seq<T>/AsyncSeq<T> Object",sidebar_position:.5,custom_edit_url:null,hide_title:!0},sidebar:"mainSidebar",previous:{title:"Equality Strategy",permalink:"/leseq/equality"},next:{title:"Create Original Functions",permalink:"/leseq/create"}},p={},u=[{value:"Seq&lt;T&gt; Object",id:"seqt-object",level:2},{value:"AsyncSeq&lt;T&gt; Object",id:"asyncseqt-object",level:2}],m={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"seqt-object"},"Seq<T",">"," Object"),(0,o.kt)("p",null,"The Seq<T",">"," object is the core object; it is created by the ",(0,o.kt)("strong",{parentName:"p"},"Generator")," and is also the argument and return value of the ",(0,o.kt)("strong",{parentName:"p"},"Operator"),"."),(0,o.kt)("p",null,"The Seq<T",">"," object has the following methods"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"method"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"pipe"),(0,o.kt)("td",{parentName:"tr",align:null},"Takes an arbitrary number of ",(0,o.kt)("strong",{parentName:"td"},"Operators")," as arguments and converts the sequence.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"value"),(0,o.kt)("td",{parentName:"tr",align:null},"Takes only one ",(0,o.kt)("strong",{parentName:"td"},"Value")," and converts the sequence to a value.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"forEach"),(0,o.kt)("td",{parentName:"tr",align:null},"Performs iterative processing on elements of a sequence.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"toArray"),(0,o.kt)("td",{parentName:"tr",align:null},"Converts a sequence to an array.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"toAsyncSeq"),(0,o.kt)("td",{parentName:"tr",align:null},"Convents a sequence to ",(0,o.kt)("strong",{parentName:"td"},"AsyncSeq<T",">"))))),(0,o.kt)("p",null,"Since lazy evaluation is employed, the process is not executed when ",(0,o.kt)("strong",{parentName:"p"},"pipe()")," is called, but only when ",(0,o.kt)("strong",{parentName:"p"},"value()"),", ",(0,o.kt)("strong",{parentName:"p"},"toArray()"),", or ",(0,o.kt)("strong",{parentName:"p"},"forEach()")," is called."),(0,o.kt)("h2",{id:"asyncseqt-object"},"AsyncSeq<T",">"," Object"),(0,o.kt)("p",null,"Basically the same as Seq<T",">",", but ",(0,o.kt)("strong",{parentName:"p"},"valueAsync()"),", ",(0,o.kt)("strong",{parentName:"p"},"toArrayAsync()"),", and ",(0,o.kt)("strong",{parentName:"p"},"foreachAsync()")," are async function. Also, only an asynchronous version of ",(0,o.kt)("strong",{parentName:"p"},"Operators"),"/",(0,o.kt)("strong",{parentName:"p"},"Values"),", which is passed to ",(0,o.kt)("strong",{parentName:"p"},"pipe()/valueAsync()"),", is allowed."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"method"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"pipe"),(0,o.kt)("td",{parentName:"tr",align:null},"Takes an arbitrary number of ",(0,o.kt)("strong",{parentName:"td"},"Operators")," as arguments and converts the sequence.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"valueAsync"),(0,o.kt)("td",{parentName:"tr",align:null},"Takes only one ",(0,o.kt)("strong",{parentName:"td"},"Value")," and converts the sequence to a value.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"forEachAsync"),(0,o.kt)("td",{parentName:"tr",align:null},"Performs iterative processing on elements of a sequence.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"toArrayAsync"),(0,o.kt)("td",{parentName:"tr",align:null},"Converts a sequence to an array.")))))}d.isMDXComponent=!0}}]);